<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".templated.cs" #>
<#
string[] integralTypes = { "sbyte", "byte", "short", "ushort", "int", "uint", "long", "ulong", "float", "double" };
bool remainder = false;
#>
namespace Enhancer.Extensions
{
    static partial class NumberExtensions
    {
<#
            foreach (string typeName in integralTypes)
            {
                if (remainder)
                {
                    WriteLine("");
                }
#>
        public static <#= typeName #> Clamp(this <#= typeName #> value, <#= typeName #> min, <#= typeName #> max)
        {
            if (value < min)
            {
                return min;
            }
            if (value > max)
            {
                return max;
            }
            return value;
        }
<#
                remainder = true;
            }
#>
    }
}